#!/bin/bash
#
# Your backup configuration file, please copy and to modify to ->  ~/.config/backup.config
#
THIS_MACHINE=$(uname -n)
# Change destination server to local setup, alias or an valid IP here.
DEST_SERVER=192.168.1.69
# And its default mount point target (should not be changed).
TARGET="/mnt/$DEST_SERVER"
DPATH=/usr/local/bin:/usr/bin:/bin
EXT_ENC="tar.xz.enc"
EXT_LST="lst.xz"
#To speed up backup, set compression ratio to XZ_OPT=-4e
XZ_OPT=-9e
# You should set only following verbose output to 0 externally, for example for an cron job.
[[ -z $BACKUP_VERBOSE ]] && BACKUP_VERBOSE=1
# Default target backup directory. Can set externally or change here.
[[ -z $BACKUP_DIRECTORY ]] && BACKUP_DIRECTORY="backups"
# The new practice is that under the mount point we go into the backup directory directly on mount point. It is safer and all uty. will work.
[[ ! -d  "/mnt/$DEST_SERVER" ]] && echo -e "\nMissing mount point for '/mnt/$DEST_SERVER:$BACKUP_DIRECTORY', we will try next to create it.\n" && \
                                   sudo -p "Please enter sudo for %u@%H password:" mkdir "/mnt/$DEST_SERVER/" && \
                                   [[ $? -ne 0 ]] && exit 1
#
# The following passcode of your backup you have to keep or memorize in case of a crash.
GPG_PASS="7D-C7-1A-A5-62-7B" 
#
# Modify following list of directories to backup according to your system.
# For restore speed efficiency, order of dirs appearing here is important.
# Make sure you include directories here to be recursively completely added.
# Or glob resolved to be added, which is level based any. i.e. Documents/*.txt is not same as  Documents/*/*.txt.
# When you wildcard a directory name, i.e. Vid* it will include alls directories begining with 'Vid'. 
# As well all files might that have this in name. This should be kept on mind.
# Setting this blank, will backup your whole $HOME located directory structure, minus the excludes.
#
DIRECTORIES="Documents Pictures Public Videos dev .cinnamon .config .cpan .cpanm .curlrc .icons .local .vim .ssh .themes .fzf backups"
#
# New approuch is to backup by default all home directory level one files including DOT. 
# Other none $HOME locations and files to be included into the backup, are copied to a new folder called  _BACKUP_WILDFILES/.
# You might not want that if not selecting system config files. Glob type patterns can be used to limit the list being copied.
# This glob isn't anymore extension based or recursive. i.e. Setting *.sh or *.pl will be ignored.
# Best practice is to leave in the HOME ~ only every day script files and possibly symbolic links. For shorter paths.
# Use ./list.sh to check after backup, if the important stuff is backed up.
#
WILDFILES="/etc/fstab /etc/host* /etc/*.conf"
#
# Careful with the following excludes, make a copy before modifications.
# chrome browser extensions and caches are not backuped as it is on the cloud.
EXCLUDES="--exclude=.local/share/Steam --exclude=.local/share/flatpak --exclude=.local/share/Trash --exclude=.local/lib --exclude=*Cache* \
--exclude=.config/session --exclude=.config/Signal --exclude=.config/libreoffice --exclude=*google-chrome* \
--exclude=*cache* --exclude=*chromium* --exclude=localperl --exclude=.config/Code/* --exclude=*pgadmin4* --exclude=*.vscode*"
 
# 
# Following is pre backup run if required, like synch from server to local machine to also include in backup stuff.
#
    # echo -e "Synching with remote server files!"
    #rsync -chavzP --stats "<user>@<server>:database/dbLifeLog/"  "/home/$USER/backups/LifeLog/db"

# This file originated from https://github.com/wbudic/B_L_R_via_sshfs.
